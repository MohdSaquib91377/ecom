"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import os   
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

SECRET_KEY = config('SECRET_KEY')
DEBUG = config('DEBUG', cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='localhost').split()


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    # Built-in apps
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Local apps
    "accounts",
    "otp",
    "tokens",
    "store",
    
    # Third-party apps
    "corsheaders",
    "rest_framework",
    "drf_yasg",
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'django_filters'


]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': config('POSTGRES_DB'),
        'USER': config('POSTGRES_USER'),
        'PASSWORD': config('POSTGRES_PASSWORD'),
        'HOST': config('POSTGRES_HOST'),
        'PORT': config('POSTGRES_PORT')
    }
}
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / "static"

# Add this line to make Django look in your staticfiles directory too
STATICFILES_DIRS = [
    BASE_DIR / 'staticfiles',  # This will include your existing staticfiles directory
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"





CSRF_TRUSTED_ORIGINS = ["http://localhost:1337","http://localhost:9006","https://medilab.instaviv.com","http://localhost:5173","http://localhost:3000"]
AUTH_USER_MODEL = 'accounts.User'

SWAGGER_SETTINGS = {
   'SECURITY_DEFINITIONS': {
      'Basic': {
            'type': 'basic'
      },
      'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
      }
   }
}
# OTP Service Configuration
MSG91_TEMPLATE_ID=config('MSG91_TEMPLATE_ID')
MSG91_AUTH_KEY=config('MSG91_AUTH_KEY')

TWILIO_ACCOUNT_SID=config('TWILIO_ACCOUNT_SID')
TWILIO_AUTH_TOKEN=config('TWILIO_AUTH_TOKEN')
TWILIO_PHONE_NUMBER=config('TWILIO_PHONE_NUMBER')


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'PAGE_SIZE': 10,  # Number of items per page

}
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=5),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": False,
    "UPDATE_LAST_LOGIN": False,

    "ALGORITHM": "HS256",
    "SIGNING_KEY": config('SECRET_KEY'),
    "VERIFYING_KEY": "",
    "AUDIENCE": None,
    "ISSUER": None,
    "JSON_ENCODER": None,
    "JWK_URL": None,
    "LEEWAY": 0,

    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",

    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",

    "JTI_CLAIM": "jti",

    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=5),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=1),

    "TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainPairSerializer",
    "TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSerializer",
    "TOKEN_VERIFY_SERIALIZER": "rest_framework_simplejwt.serializers.TokenVerifySerializer",
    "TOKEN_BLACKLIST_SERIALIZER": "rest_framework_simplejwt.serializers.TokenBlacklistSerializer",
    "SLIDING_TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainSlidingSerializer",
    "SLIDING_TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSlidingSerializer",
}

JAZZMIN_SETTINGS = {
    # Basic Branding
    "site_title": "Admin",
    "site_header": "Dashboard",
    "site_brand": "Admin",

    # Login Page
    "welcome_sign": "Welcome to the Admin Portal",
    "copyright": "Â© 2025 Library | All Rights Reserved",

    # Search Models
    "search_model": ["accounts.User", "store.Product"],

    # Avatar Support (Optional, if you have user profile images)
    "user_avatar": None,

    # Top Menu Configuration â€” Add tabs for quick access ðŸš€
    "topmenu_links": [
        {"name": "Dashboard", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "Products", "app": "store"},  # Will show Product, Category, Brand
        {"name": "Accounts", "app": "accounts"},
        {"name": "Otp", "app": "otps"},  # I
        {"name": "Token", "app": "tokens"}# If you have an orders app
    ],

    # User Menu Options (Top-right dropdown)
    "usermenu_links": [
        {"model": "auth.user"},
        {"name": "Profile", "url": "/admin/accounts/user/", "icon": "fas fa-user"},
        {"name": "Support", "url": "https://support.example.com", "icon": "fas fa-life-ring"},
        {"name": "Logout", "url": "/admin/logout/", "icon": "fas fa-sign-out-alt"},
    ],

    # Sidebar & Navigation
    "show_sidebar": True,
    "navigation_expanded": True,
    "hide_apps": ["auth"],  # Hide built-in auth if unnecessary
    "hide_models": ["auth.group"],
    "order_with_respect_to": ["accounts", "otp", "store"],

    # UI Tweaks ðŸŽ¨
    "custom_css": None,
    "custom_js": None,
    "show_ui_builder": False,
    "use_google_fonts_cdn": True,

    # Change Form Layout (Tabbed Editing)
    "changeform_format": "horizontal_tabs",  # Options: single | horizontal_tabs | vertical_tabs | collapsible | carousel
    "changeform_format_overrides": {
        "store.Product": "horizontal_tabs",  # Product form in vertical tabs for better UX
    },

    # Icons for Apps and Models â€” Makes UI modern ðŸ”¥
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "store.Product": "fas fa-box",
        "store.Category": "fas fa-layer-group",
        "store.SubCategory": "fas fa-sitemap",
        "store.Brand": "fas fa-tags",
        "store.Image": "fas fa-image",
        "store.RecentView": "fas fa-eye",
        "accounts.User": "fas fa-user-shield",
        "otp.OTP": "fas fa-key",
        "store.Wishlist": "fas fa-heart",  # <-- Added Wishlist icon here
        "store.Cart": "fas fa-shopping-cart",       # <-- Added Cart icon here
        "store.CartItem": "fas fa-shopping-basket"  # <-- Added CartItem icon here


    },

    # Colors & Themes ðŸŒˆ
    "theme": "darkly",  # Use a premium dark theme
    "dark_mode_theme": "darkly",  # Matches dark mode
}


CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",
    "http://localhost:3000",
    "http://127.0.0.1:3000"
]

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = True